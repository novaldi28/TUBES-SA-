# -*- coding: utf-8 -*-
"""SA_TUBES

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10YW0EUK2ldMDpxGwbz-OQJlDNWS0Q_oA
"""

import numpy as np
 import pandas as pd

!gdown --id 1jB2xhVyv0VvQbw-k2TUQ2tcdTb3-Zmcb
Data= pd.read_excel("DATA.xlsx")

class wisata(object):                                                               
  def __init__(self, nama, biaya, luas_wilayah):
    self.nama = nama
    self.biaya = biaya
    self.luas_wilayah = luas_wilayah
  
  def ambilluas_wilayah(self):                                                            
    return self.luas_wilayah

  def ambilbiaya(self):                                                          
    return self.biaya

  def ambildensity(self):                                                         
    return float(self.biaya/self.luas_wilayah)
  
  def namawisata(self):                                                             
    return self.nama

def wisata_alam(listwisata, listbiaya, listluas_wilayah): 
  wisata_alam = []
  for i in range(len(listwisata)) :
    wisata_alam.append(wisata(listwisata[i], listbiaya[i], listluas_wilayah[i]))
  return wisata_alam

"""***Inisialisasi wisata_alam***"""

daftarwisata = ['Borobudur            ', 'Pantai Kidul         ','Masjid 99 Kubah      ', 'Pantai Dumai         ', 'Pantai Losari        ', 'Taman Hutan Raya     ', 'Tebing Keraton       ', 'Gunung Putri         ']  
daftarbiaya =  [750, 400, 250, 200, 500, 400, 200, 350]
daftarluas_wilayah = [5, 3, 2, 3, 4, 4, 3, 2]
wisata_alamlahan = wisata_alam(daftarwisata, daftarbiaya, daftarluas_wilayah)

for i in range(len(wisata_alamlahan)):                                                
  print("Nama lahan : ", wisata_alamlahan[i].nama, "biaya : ", wisata_alamlahan[i].biaya, " luas_wilayah : ",wisata_alamlahan[i].luas_wilayah)

"""## ***Implementasi Algoritma Greedy***"""

def solusi_greedy(data, luas_wilayahmax, metode): 
  listwisata_sorted = sorted(data, key = metode, reverse = True)

  result = []
  biayatotal = 0
  luas_wilayahtotal = 0

  for i in range(len(listwisata_sorted)): 
    if (luas_wilayahtotal + listwisata_sorted[i].ambilluas_wilayah() <= luas_wilayahmax) :
       result.append(listwisata_sorted[i])
       luas_wilayahtotal = luas_wilayahtotal + listwisata_sorted[i].ambilluas_wilayah()
       biayatotal = biayatotal + listwisata_sorted[i].ambilbiaya()
       
  return biayatotal, luas_wilayahtotal, result

def solusi_greedyluas_wilayah(data, luas_wilayahmaks, metode): 
  listwisata_sorted = sorted(data, key = metode, reverse = False)

  result = []
  biayatotal = 0
  luas_wilayahtotal = 0

  for i in range(len(listwisata_sorted)): 
    if (luas_wilayahtotal + listwisata_sorted[i].ambilluas_wilayah() <= luas_wilayahmaks) :
       result.append(listwisata_sorted[i])
       biayatotal = biayatotal + listwisata_sorted[i].ambilbiaya()
       luas_wilayahtotal = luas_wilayahtotal + listwisata_sorted[i].ambilluas_wilayah()

  return biayatotal, luas_wilayahtotal, result

"""### Greedy by biaya"""

import time
start_time = time.time()

biaya_total, luas_wilayah_total, lahan_terambil = solusi_greedy(wisata_alamlahan, 12, wisata.ambilbiaya)

print("biaya Maksimal  : ", biaya_total)
print("luas_wilayah Terambil    : ", luas_wilayah_total)
print("lahan Terambil   : ")

for i in range(len(lahan_terambil)):
 print(lahan_terambil[i].nama) 

waktu = time.time() - start_time
print("--- %s seconds ---" % (waktu))

"""### Greedy by luas_wilayah"""

import time
start_time = time.time()

biaya_total, luas_wilayah_total, lahan_terambil = solusi_greedyluas_wilayah(wisata_alamlahan, 12, wisata.ambilluas_wilayah)

print("biaya Maksimal : ", biaya_total)
print("luas_wilayah Terambil   : ", luas_wilayah_total)
print("lahan Terambil  : ")

for i in range(len(lahan_terambil)):
 print(lahan_terambil[i].nama)

waktu = time.time() - start_time
print("--- %s seconds ---" % (waktu))

"""### Greedy by density"""

import time
start_time = time.time() 

biaya_total, luas_wilayah_total, lahan_terambil = solusi_greedy(wisata_alamlahan, 12, wisata.ambilbiaya)

print("biaya Maksimal  : ", biaya_total)
print("luas_wilayah Terambil    : ", luas_wilayah_total)
print("lahan Terambil   : ")

for i in range(len(lahan_terambil)):
 print(lahan_terambil[i].nama) 

waktu = time.time() - start_time
print("--- %s seconds ---" % (waktu))

"""## ***Implementasi Algoritma Brute Force***"""

def kemungkinanlist(listlahan):                                                   
  result = [[]]
  for lahan in listlahan :
    kemungkinan = [n+[lahan] for n in result]
    result.extend(kemungkinan)

  return result

def bruteforce(data, luas_wilayah_max): #Brute Force 
  result = []
  for i in data :                                                                  
    if i != [] :  
      total_biaya = 0
      total_luas_wilayah = 0      
      for x in i :                                                                
        total_biaya = total_biaya + wisata_alamlahan[x-1].biaya
        total_luas_wilayah = total_luas_wilayah + wisata_alamlahan[x-1].luas_wilayah
      if total_luas_wilayah > luas_wilayah_max : 
        result.append([total_biaya, total_luas_wilayah, "Tidak Sesuai"])
      else :
        result.append([total_biaya, total_luas_wilayah, "Sesuai"])
    else :
      result.append([])
  
  return result

import time
start_time = time.time()

i = 1
id_wisata = []
print(len(daftarwisata)) 
while i <= len(daftarwisata) :                                                      
  id_wisata.append(i)
  i = i + 1


print('data', id_wisata)
print('seluruh kemungkinan lahan yang di ambil :', kemungkinanlist(id_wisata))
data_bruteforce = kemungkinanlist(id_wisata)                                       
result_bruteforce = bruteforce(data_bruteforce,12)                                 
                                                                                  
print(result_bruteforce)

i = 1

print(len(data_bruteforce))
print(len(result_bruteforce))
while i < len(result_bruteforce):                                                 
  if result_bruteforce[i][2] == "Sesuai" :
    if biaya_max < result_bruteforce[i][0] :
      biaya_max = result_bruteforce[i][0]
      luas_wilayah_max = result_bruteforce[i][1]
      index_max  = i
    if biaya_max == result_bruteforce[i][0] :
      if luas_wilayah_max > result_bruteforce[i][1] :
        biaya_max = result_bruteforce[i][0]
        luas_wilayah_max = result_bruteforce[i][1]
        index_max  = i
  i = i + 1

print("biaya Max     :", biaya_max)
print("luas Max       :", luas_wilayah_max)
print("wisata Terpilih  : ") 
for index in data_bruteforce[index_max] :
  print(wisata_alamlahan[index-1].nama)

waktu = time.time() - start_time
print("--- %s seconds ---" % (waktu))